{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","formattedJSON","provider","formattedFeed","key","jsonFeed","hasOwnProperty","forEach","element","push","sort","a","b","pubDate","getJsonFeed","className","formattedNumbers","number","rssProviders","clicks","toString","i","length","showNumbers","Column","size","type","map","item","index","src","providers","image","width","height","href","link","class","target","rel","title","category","flightInfo","from","to","price","fromNow","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"w7mBAkIeA,MA/Gf,WACI,IAAIC,EA2FR,WAAsC,IAAjBC,EAAgB,uDAAL,KACxBC,EAAgB,GAEpB,IAAID,EAAU,CAAC,IAAD,WACDE,GACFC,EAASC,eAAeF,IACvBC,EAASD,GAAKG,SAAQ,SAAAC,GAClBA,EAAQN,SAAWE,EACnBD,EAAcM,KAAKD,OAJ/B,IAAK,IAAIJ,KAAOC,EAAW,EAAlBD,GAYb,OAFAD,EAAcO,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEE,QAAUD,EAAEC,QAAW,GAAK,KAErDV,EA3GaW,GAEtB,OACE,6BACI,kBAAC,UAAD,CAASC,UAAW,4BAChB,kBAAC,YAAD,CAAWA,UAAW,qBAClB,wBAAIA,UAAW,mDAAf,iBACA,uBAAGA,UAAW,YACV,wBAAIA,UAAW,uBAAf,qCAEI,8BAtBN,WAId,IAHA,IAAIC,EAAmB,GACnBC,EAAUC,EAAaC,OAAQC,WAE1BC,EAAI,EAAGA,EAAIJ,EAAOK,OAAQD,IAC/BL,EAAiBP,KAAK,0BAAMM,UAAU,OAAOE,EAAOI,KAGxD,OAAOL,EAekBO,GADL,6BAOhB,kBAAC,UAAD,KACI,kBAAC,YAAD,KACI,wBAAIR,UAAW,iBACX,kBAAC,UAAD,CAASA,UAAW,cAChB,kBAAC,UAAQS,OAAT,CAAgBT,UAAW,iCAKnC,kBAAC,UAAD,KACI,kBAAC,UAAQS,OAAT,CAAgBC,KAAK,aACjB,kBAAC,MAAD,KACI,wBAAIV,UAAW,cAAf,UACA,2BAAOA,UAAU,YAAW,2BAAOW,KAAK,aAAxC,WACA,2BAAOX,UAAU,YAAW,2BAAOW,KAAK,aAAxC,UAGR,kBAAC,UAAQF,OAAT,KACI,kBAAC,YAAD,KACI,4BACKvB,GAAiBA,EAAc0B,KAAI,SAASC,EAAMC,GAC/C,OACI,wBAAIzB,IAAKyB,EAAOd,UAAU,eACtB,yBAAKA,UAAU,cACX,yBAAKA,UAAU,OACVe,IAAKZ,EAAaa,UAAUH,EAAK1B,UAAU8B,MAAOC,MAAO,KAAMC,OAAQ,QAEhF,yBAAKnB,UAAU,iBACX,yBAAKA,UAAU,WACX,yBAAKA,UAAU,4DACX,yBAAKA,UAAU,UACX,wBAAIA,UAAU,4BACV,uBAAGoB,KAAMP,EAAKQ,KAAMC,MAAM,aAAaC,OAAQ,SAAUC,IAAK,uBAAwBX,EAAKY,OAC1FZ,EAAKa,UAAab,EAAKa,SAAUd,KAAI,SAASc,GAC3C,OAAQ,kBAAC,MAAD,CAAK1B,UAAW,sCAAuC0B,MAElEb,EAAKc,WACFd,EAAKc,WAAWC,MAAQf,EAAKc,WAAWE,IAAMhB,EAAKc,WAAWG,MAC1D,kBAAC,MAAD,CACI9B,UAAW,mCAAoCa,EAAKc,WAAWC,KAAO,OAASf,EAAKc,WAAWE,GAAK,KAAOhB,EAAKc,WAAWG,MAAQ,KAEvIjB,EAAKc,WAAWC,MAAQf,EAAKc,WAAWE,GACpC,kBAAC,MAAD,CACI7B,UAAW,mCAAoCa,EAAKc,WAAWC,KAAO,OAASf,EAAKc,WAAWE,IAEnGhB,EAAKc,WAAWG,MACZ,kBAAC,MAAD,CACI9B,UAAW,mCAAoCa,EAAKc,WAAWG,OAEnE,KAEZ,OAIZ,yBAAK9B,UAAU,gCACX,kBAAC,IAAD,CAAQ+B,SAAO,GAAElB,EAAKf,yBCjF9DkC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.e5816ae7.chunk.js","sourcesContent":["import React from 'react';\nimport rssProviders from './rssProviders.json';\nimport jsonFeed from './rssFeed.json';\nimport Moment from 'react-moment';\nimport './App.css';\nimport 'react-bulma-components/dist/react-bulma-components.min.css';\nimport { Button, Section, Container, Columns, Box, Tag } from \"react-bulma-components\";\n\nlet showNumbers = () => {\n    let formattedNumbers = [],\n        number = (rssProviders.clicks).toString();\n\n    for (let i = 0; i < number.length; i++) {\n        formattedNumbers.push(<span className=\"num\">{number[i]}</span>);\n    }\n\n    return formattedNumbers;\n};\n\nfunction App() {\n    let formattedJSON = getJsonFeed();\n\n  return (\n    <div>\n        <Section className={\"is-medium gradient-color\"}>\n            <Container className={\"has-text-centered\"}>\n                <h1 className={\"title formatting is-spaced has-text-weight-bold\"}>FlightWatcher</h1>\n                <p className={\"subtitle\"}>\n                    <h2 className={\"subtitle formatting\"}>\n                        The best RSS cheap flight tracker</h2>\n                        <span>\n                            {showNumbers()}\n                            &nbsp;&nbsp;new passengers\n                        </span>\n                </p>\n            </Container>\n        </Section>\n        <Section>\n            <Container>\n                <h6 className={\"subtitle is-6\"}>\n                    <Columns className={\"is-gapless\"}>\n                        <Columns.Column className={\"has-text-right upload-date\"}>\n\n                        </Columns.Column>\n                    </Columns>\n                </h6>\n                <Columns>\n                    <Columns.Column size=\"one-fifth\">\n                        <Box>\n                            <h6 className={\"title is-6\"}>Filter</h6>\n                            <label className=\"checkbox\"><input type=\"checkbox\"/> Europe</label>\n                            <label className=\"checkbox\"><input type=\"checkbox\"/> USA</label>\n                        </Box>\n                    </Columns.Column>\n                    <Columns.Column>\n                        <Container>\n                            <ol>\n                                {formattedJSON && formattedJSON.map(function(item, index){\n                                    return (\n                                        <li key={index} className=\"boxed media\">\n                                            <div className=\"media-left\">\n                                                <img className=\"logo\"\n                                                     src={rssProviders.providers[item.provider].image} width={\"32\"} height={\"32\"}/>\n                                            </div>\n                                            <div className=\"media-content\">\n                                                <div className=\"content\">\n                                                    <div className=\"title-columns columns is-gapless is-mobile is-marginless\">\n                                                        <div className=\"column\">\n                                                            <h6 className=\"title is-6 is-marginless\">\n                                                                <a href={item.link} class=\"media-link\" target={\"_blank\"} rel={\"noopener noreferrer\"}>{item.title}</a>\n                                                                {item.category && (item.category).map(function(category){\n                                                                    return (<Tag className={\"is-rounded is-primary is-light tag\"}>{category}</Tag>);\n                                                                })}\n                                                                {item.flightInfo ?\n                                                                    item.flightInfo.from && item.flightInfo.to && item.flightInfo.price ?\n                                                                        <Tag\n                                                                            className={\"is-rounded is-info is-light tag\"}>{item.flightInfo.from + \" -> \" + item.flightInfo.to + \" (\" + item.flightInfo.price + \")\"}</Tag>\n                                                                        :\n                                                                        item.flightInfo.from && item.flightInfo.to ?\n                                                                            <Tag\n                                                                                className={\"is-rounded is-info is-light tag\"}>{item.flightInfo.from + \" -> \" + item.flightInfo.to}</Tag>\n                                                                            :\n                                                                            item.flightInfo.price ?\n                                                                                <Tag\n                                                                                    className={\"is-rounded is-info is-light tag\"}>{item.flightInfo.price}</Tag>\n                                                                                :\n                                                                                null\n                                                                    :\n                                                                    null\n                                                                }\n                                                            </h6>\n                                                        </div>\n                                                        <div className=\"column is-narrow upload-date\">\n                                                            <Moment fromNow>{item.pubDate}</Moment>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </li>\n                                    );\n                                })}\n                            </ol>\n                        </Container>\n                    </Columns.Column>\n                </Columns>\n            </Container>\n        </Section>\n    </div>\n  );\n}\n\nfunction getJsonFeed(provider = null){\n    let formattedFeed = [];\n\n    if(!provider) {\n        for (let key in jsonFeed) {\n            if(jsonFeed.hasOwnProperty(key)){\n                jsonFeed[key].forEach(element => {\n                    element.provider = key;\n                    formattedFeed.push(element);\n                })\n            }\n        }\n    }\n\n    formattedFeed.sort((a, b) => (a.pubDate < b.pubDate) ? 1 : -1);\n\n    return formattedFeed;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}